<div class="map-wrapper" style="position: absolute; z-index: 2; right: 10px;">
    {{#if usersData}}
    {{#each usersData}}
    <article class="card card--horizontal card--{{this.gender}}">
        <div class="card__img-holder">
            <div class="card__img-wrapper">
                {{#unless this.avatar}}
                <div class="no-avatar">
                    <span>{{ this.initials }}</span>
                </div>
                {{/unless}}
                {{#if this.avatar}}
                <div>
                    <img class="card__img" src="{{ this.avatar }}" width="72" alt="">
                </div>
                {{/if}}
            </div>
        </div>
        <div class="card__info">
            <h2 class="card__info__title">{{ this.fullname }}</h2>
            <div class="tag-wrapper">
                {{#each this.favoriteGenres}}
                <span class="tag tag--small">{{ this.name }}</span>
                {{/each}}
            </div>
        </div>
        <div class="card__status">
            <span class="badge badge--music">
                <i class="icon icon-music"></i>
            </span>
        </div>
    </article>
    {{/each}}
    {{/if}}
</div>

<div id='map'></div>
<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiaWduYWNpb2diMTk5MCIsImEiOiJjazc3dHp2OGQwOW41M2VwZDZqcGlheGFyIn0.4aizFUZI7lq90KhxZfvUBw';

    const usersDataJSON = {{{ usersDataJSON }}};
    const map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/dark-v10',
        zoom: 12,
        center: [-3.6851124, 40.4456899]
    });

    map.scrollZoom.disable();

    let size = 52;
    let pulsingDot = {
        width: size,
        height: size,
        data: new Uint8Array(size * size * 4),

        // get rendering context for the map canvas when layer is added to the map
        onAdd: function () {
            let canvas = document.createElement('canvas');
            canvas.width = this.width;
            canvas.height = this.height;
            this.context = canvas.getContext('2d');
        },

        // called once before every frame where the icon will be used
        render: function () {
            let duration = 1500;
            let t = (performance.now() % duration) / duration;

            let radius = (size / 2) * 0.3;
            let outerRadius = (size / 2) * 0.7 * t + radius;
            let context = this.context;

            // draw outer circle
            context.clearRect(0, 0, this.width, this.height);
            context.beginPath();
            context.arc(
                this.width / 2,
                this.height / 2,
                outerRadius,
                0,
                Math.PI * 2
            );
            context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';
            context.fill();

            context.beginPath();
            context.arc(
                this.width / 2,
                this.height / 2,
                radius,
                0,
                Math.PI * 2
            );
            context.fillStyle = 'rgba(255, 100, 100, 1)';
            context.strokeStyle = 'rgba(255, 100, 100, 1)';
            context.lineWidth = 2 + 4 * (1 - t);
            context.fill();
            context.stroke();

            this.data = context.getImageData(
                0,
                0,
                this.width,
                this.height
            ).data;
            map.triggerRepaint();

            return true;
        }
    };

    map.on('load', function () {
        map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });
        map.addSource('points', {
            'type': 'geojson',
            'data': {
                'type': 'FeatureCollection',
                'features': usersDataJSON.map(data => {
                    return {
                        'type': 'Feature',
                        'properties': {
                            'description': `<div class="card card--map-bubble card--${data.gender}">
                                <div class="card__img-wrapper">
                                    <div>
                                        <img class="card__img" src="${data.avatar}" width="150" alt="">
                                    </div>
                                </div>
                            </div>`
                        },
                        'geometry': {
                            'type': 'Point',
                            'coordinates': data.coordinates
                        }
                    }
                })
            }
        },


            {
                'type': 'Feature',
                'properties': {
                    'description':
                        '<img  width="100vw" height="100vh"src="https://randomuser.me/api/portraits/men/60.jpg"><br><strong>Alfred</strong>'

                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-3.6867364, 40.4601224]

                }
            },

            map.on('click', 'points', function (e) {
                var coordinates = e.features[0].geometry.coordinates.slice();
                var description = e.features[0].properties.description;


                {
                    'type': 'Feature',
                        'properties': {
                        'description':
                        '<img  width="100vw" height="100vh"src="https://randomuser.me/api/portraits/women/51.jpg"><br><strong>Maelys</strong>'

                    },
                    'geometry': {
                        'type': 'Point',
                            'coordinates': [-3.6924296, 40.4251223]

                    }
                },


                {
                    'type': 'Feature',
                        'properties': {
                        'description':
                        '<img  width="100vw" height="100vh"src="https://randomuser.me/api/portraits/men/9.jpg"><br><strong>Ismael</strong>'

                    },
                    'geometry': {
                        'type': 'Point',
                            'coordinates': [-3.7159634, 40.4390676]

                    }
                },

                {
                    'type': 'Feature',
                        'properties': {
                        'description':
                        '<img  width="100vw" height="100vh"src="https://randomuser.me/api/portraits/men/63.jpg"><br><strong>Joaquin</strong>'

                    },
                    'geometry': {
                        'type': 'Point',
                            'coordinates': [-3.726689, 40.427977]

                    }
                },

                {
                    'type': 'Feature',
                        'properties': {
                        'description':
                        '<img  width="100vw" height="100vh"src="https://randomuser.me/api/portraits/men/92.jpg"><br><strong>Aitor</strong>'

                    },
                    'geometry': {
                        'type': 'Point',
                            'coordinates': [-3.7304776, 40.4613439]

                    }
                },


                {
                    'type': 'Feature',
                        'properties': {
                        'description':
                        '<img  width="100vw" height="100vh"src="https://randomuser.me/api/portraits/men/36.jpg"><br><strong>Ramon</strong>'

                    },
                    'geometry': {
                        'type': 'Point',
                            'coordinates': [-3.7150402, 40.4103102]

                    }
                },


          /*
           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.6851124, 40.4456899]

             }
           },
           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.6754097, 40.4569816]

             }
           },
           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.6700987, 40.44825]

             }
           },
           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.7009534, 40.4348648]

             }
           },
           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.6848242, 40.4327656]

             }
           },
           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.6713801, 40.4278899]

             }
           },









           {
             'type': 'Feature',
             'geometry': {
               'type': 'Point',
               'coordinates': [-3.6866882, 40.4152606]

             }
           }
 */
        ]
            }
    });
    map.addLayer({
        'id': 'points',
        'type': 'symbol',
        'source': 'points',
        'layout': {
            'icon-image': 'pulsing-dot',
            'icon-allow-overlap': true
        }
    });
</script>